name: Build APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential ccache git libncurses5-dev libffi-dev libssl-dev libsqlite3-dev zlib1g-dev libgmp-dev
        sudo apt-get install -y openjdk-8-jdk unzip

    - name: Install Python packages
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython==0.29.19
        pip install kivy==2.1.0
        pip install pytz numpy matplotlib skyfield arabic_reshaper python-bidi

    - name: Install Android Command Line Tools
      run: |
        mkdir -p $HOME/android-sdk/cmdline-tools
        cd $HOME/android-sdk
        wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip commandlinetools-linux-8512546_latest.zip -d temp
        mv temp/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
        rm -rf temp commandlinetools-linux-8512546_latest.zip
      shell: bash

    - name: Accept Android Licenses
      run: |
        export PATH=$PATH:$HOME/android-sdk/cmdline-tools/latest/bin
        yes | sdkmanager --licenses
      shell: bash

    - name: Build APK with Buildozer
      run: |
        export PATH=$PATH:$HOME/android-sdk/cmdline-tools/latest/bin
        buildozer -v android debug
      shell: bash

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: apk
        path: "bin/*.apk"
